<script type="text/javascript">
  $.fn.highlight = function(what,spanClass) {
    return this.each(function(){        
      var container = this,
          content = container.innerHTML,
          pattern = new RegExp('(>[^<.]*)(' + what + ')([^<.]*)','g'),
          replaceWith = '$1<span ' + ( spanClass ? 'class="' + spanClass + '"' : '' ) + '">$2</span>$3',
          highlighted = content.replace(pattern,replaceWith);
      container.innerHTML = highlighted;
    });
  }
  
  function doBack() {
    if($('#controller')) {
      angular.element($('#controller')).scope().$apply(function(scope) {
        scope.back();
      });
    }
  }

  function doNext() {
    if($('#controller')) {
      angular.element($('#controller')).scope().$apply(function(scope) {
        scope.next();
      });
    }
  }

  $(document).ready(function() {    
    $("body").keydown(function(e) {
      if(e.keyCode == 37) { // left  
        doBack();
      }
      else if(e.keyCode == 39) { // right
        doNext();
      }
    });
    
    $('p.content').on({
        'swiperight' : function(ev) {
            doBack();
        },
        'swipeleft' : function(ev) {
            doNext();
        },
        'swipeup' : function(ev) {
        },
        'swipedown' : function(ev) {
        }
    });    
  });
  
  
  function PageCtrl($scope) {
    $scope.cur = <%= @number %>;

    <% cache(:action => 'read', :action_suffix => "items_map_#{@language}_#{@volume}") do %>
    $scope.items_map = <%= raw @items_map.to_json %>;
    <% end %>

    $scope.max_number = <%= @max_number %>;
    <% if !@keywords.nil? %>
      $scope.keywords = <%= raw @keywords.split.each { |keyword| keyword.gsub('+',' ') } %>;
    <% end %>
    
    <% cache(:action => 'read', :action_suffix => "all_pages_#{@language}_#{@volume}") do %>
    $scope.all_pages = <%= raw @all_pages.to_json %>;
    <% end %>
          
    $scope.set_content = function () {
      var content = $scope.all_pages[$scope.cur][0];
      if (!$scope.keywords) {
        $scope.content = content;
      } else {
        var pattern = new RegExp('(' + $scope.keywords.join('|') + ')','g'),
            replaceWith = '<span ' + ( 'class="' + 'highlight_excerpt' + '"' ) + '">$1</span>',
            highlighted = content.replace(pattern, replaceWith);           
        $scope.content = highlighted;
      }
      $scope.page_number_info = $scope.all_pages[$scope.cur][1];
      $scope.item_number_info = $scope.all_pages[$scope.cur][2];
      $scope.page_number_thai = $scope.all_pages[$scope.cur][3];
      $scope.page_id = $scope.all_pages[$scope.cur][4];
      $scope.item_number = $scope.all_pages[$scope.cur][5];
      
      $scope.show_if_not_zero = $scope.cur > 0 ? 'block' : 'none';
      $scope.show_inline_if_not_zero = $scope.cur > 0 ? 'inline-block' : 'none';
    }

    $scope.set_content();

    $scope.next = function() {
      $scope.cur = ($scope.cur < $scope.max_number) ? $scope.cur + 1 : $scope.cur;
      $scope.set_content();        
    }

    $scope.back = function() {
      $scope.cur = ($scope.cur > 1) ? $scope.cur -1 : $scope.cur;        
      $scope.set_content();        
    }
    
    $scope.$watch('page_number_input', function(value) {
      $scope.cur = !parseInt(value) || parseInt(value) > $scope.max_number ? $scope.cur : parseInt(value);
      $scope.set_content(); 
    });
    
    $scope.$watch('item_number_input', function(value) {
      $scope.cur = value in $scope.items_map ? $scope.items_map[value][0] : $scope.cur;
      $scope.set_content();
    });
  }
</script>